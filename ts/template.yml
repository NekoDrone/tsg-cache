AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Globals:
    Function:
        Timeout: 300
        MemorySize: 128
        Runtime: nodejs18.x

Parameters:
    TursoAuthToken:
        Type: String
        Default:
    TursoDatabaseUrl:
        Type: String
        Default:
    PublicIsStagingEnv:
        Type: String
        Default:
    TsgBlogPageId:
        Type: String
        Default:
    TsgEventPageId:
        Type: String
        Default:
    TsgDatabasePageId:
        Type: String
        Default:
    NotionIntegrationSecret:
        Type: String
        Default:
        NoEcho: true
    SyncTriggerAuthToken:
        Type: String
        Default:
        NoEcho: true

Resources:
    ArticleUpdateQueue:
        Type: AWS::SQS::Queue
        Properties:
            QueueName: !Sub "${AWS::StackName}-article-update-queue"
            VisibilityTimeout: 960 # 16 minutes (longer than Lambda timeout)
            MessageRetentionPeriod: 1209600 # 14 days
            RedrivePolicy:
                deadLetterTargetArn: !GetAtt ArticleUpdateDLQ.Arn
                maxReceiveCount: 3

    ArticleUpdateDLQ:
        Type: AWS::SQS::Queue
        Properties:
            QueueName: !Sub "${AWS::StackName}-article-update-dlq"
            MessageRetentionPeriod: 1209600 # 14 days

    SyncTrigger:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: src/lambda/
            Handler: syncTrigger.handler
            FunctionUrlConfig:
                AuthType: NONE
                Cors:
                    AllowOrigins: ["*"]
                    AllowMethods: ["POST"]
            Environment:
                Variables:
                    TURSO_AUTH_TOKEN: !Ref TursoAuthToken
                    TURSO_DATABASE_URL: !Ref TursoDatabaseUrl
                    PUBLIC_IS_STAGING_ENV: !Ref PublicIsStagingEnv
                    TSG_BLOG_PAGE_ID: !Ref TsgBlogPageId
                    TSG_EVENT_PAGE_ID: !Ref TsgEventPageId
                    TSG_DATABASE_PAGE_ID: !Ref TsgDatabasePageId
                    NOTION_INTEGRATION_SECRET: !Ref NotionIntegrationSecret
                    SYNC_TRIGGER_AUTH_TOKEN: !Ref SyncTriggerAuthToken
                    QUEUE_URL: !Ref ArticleUpdateQueue
            Policies:
                - SQSSendMessagePolicy:
                      QueueName: !GetAtt ArticleUpdateQueue.QueueName
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - syncTrigger.ts

    QueueProcessor:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: src/lambda/
            Handler: queueProcessor.handler
            Environment:
                Variables:
                    TURSO_AUTH_TOKEN: !Ref TursoAuthToken
                    TURSO_DATABASE_URL: !Ref TursoDatabaseUrl
                    PUBLIC_IS_STAGING_ENV: !Ref PublicIsStagingEnv
                    TSG_BLOG_PAGE_ID: !Ref TsgBlogPageId
                    TSG_EVENT_PAGE_ID: !Ref TsgEventPageId
                    TSG_DATABASE_PAGE_ID: !Ref TsgDatabasePageId
                    NOTION_INTEGRATION_SECRET: !Ref NotionIntegrationSecret
                    UPDATE_ARTICLES_FUNCTION_NAME: !Ref UpdateArticlesInCache
            Events:
                SQSEvent:
                    Type: SQS
                    Properties:
                        Queue: !GetAtt ArticleUpdateQueue.Arn
                        BatchSize: 1 # Process one article at a time
                        FunctionResponseTypes:
                            - ReportBatchItemFailures
            Policies:
                - LambdaInvokeFunction:
                      FunctionName: !Ref UpdateArticlesInCache
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - queueProcessor.ts

    UpdateArticlesInCache:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: src/lambda/
            Handler: updateArticlesInCache.handler
            FunctionUrlConfig:
                AuthType: NONE
                Cors:
                    AllowOrigins: ["*"]
                    AllowMethods: ["GET", "POST"]
            Environment:
                Variables:
                    TURSO_AUTH_TOKEN: !Ref TursoAuthToken
                    TURSO_DATABASE_URL: !Ref TursoDatabaseUrl
                    PUBLIC_IS_STAGING_ENV: !Ref PublicIsStagingEnv
                    TSG_BLOG_PAGE_ID: !Ref TsgBlogPageId
                    TSG_EVENT_PAGE_ID: !Ref TsgEventPageId
                    TSG_DATABASE_PAGE_ID: !Ref TsgDatabasePageId
                    NOTION_INTEGRATION_SECRET: !Ref NotionIntegrationSecret
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - updateArticlesInCache.ts

    GetArticlesInCache:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: src/lambda/
            Handler: getArticlesInCache.handler
            FunctionUrlConfig:
                AuthType: NONE
                Cors:
                    AllowOrigins: ["*"]
                    AllowMethods: ["GET", "POST"]
            Environment:
                Variables:
                    TURSO_AUTH_TOKEN: !Ref TursoAuthToken
                    TURSO_DATABASE_URL: !Ref TursoDatabaseUrl
                    PUBLIC_IS_STAGING_ENV: !Ref PublicIsStagingEnv
                    TSG_BLOG_PAGE_ID: !Ref TsgBlogPageId
                    TSG_EVENT_PAGE_ID: !Ref TsgEventPageId
                    TSG_DATABASE_PAGE_ID: !Ref TsgDatabasePageId
                    NOTION_INTEGRATION_SECRET: !Ref NotionIntegrationSecret
                    UPDATE_ARTICLES_FUNCTION_NAME: !Ref UpdateArticlesInCache
            Policies:
                - LambdaInvokeFunction:
                      FunctionName: !Ref UpdateArticlesInCache
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - getArticlesInCache.ts

Outputs:
    UpdateArticlesInCacheFunctionUrl:
        Description: "Function URL for UpdateArticlesInCache"
        Value: !GetAtt UpdateArticlesInCacheFunctionUrl.FunctionUrl
    GetArticlesInCacheFunctionUrl:
        Description: "Function URL for GetArticlesInCache"
        Value: !GetAtt GetArticlesInCacheFunctionUrl.FunctionUrl
    SyncTriggerFunctionUrl:
        Description: "Function URL for SyncTrigger"
        Value: !GetAtt SyncTriggerFunctionUrl.FunctionUrl
    ArticleUpdateQueueUrl:
        Description: "URL for the Article Update Queue"
        Value: !Ref ArticleUpdateQueue
    ArticleUpdateDLQUrl:
        Description: "URL for the Article Update Dead Letter Queue"
        Value: !Ref ArticleUpdateDLQ
